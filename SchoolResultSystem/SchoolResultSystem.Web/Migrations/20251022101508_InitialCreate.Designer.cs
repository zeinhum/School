// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolResultSystem.Web.Data;

#nullable disable

namespace SchoolResultSystem.Web.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20251022101508_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("SchoolResultSystem.Web.Models.CSModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NSN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("NSN");

                    b.ToTable("CS");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.CSTModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SCode");

                    b.HasIndex("TeacherId");

                    b.ToTable("CST");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.ClassModel", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.ExamModel", b =>
                {
                    b.Property<int>("Tablerow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcademicYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrCrh")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrMark")
                        .HasColumnType("TEXT");

                    b.Property<string>("SCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThCrh")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThMark")
                        .HasColumnType("TEXT");

                    b.HasKey("Tablerow");

                    b.HasIndex("SCode");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.MarksheetModel", b =>
                {
                    b.Property<int>("MarksheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NSN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrMark")
                        .HasColumnType("TEXT");

                    b.Property<string>("SCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThMark")
                        .HasColumnType("TEXT");

                    b.HasKey("MarksheetId");

                    b.HasIndex("ExamId");

                    b.HasIndex("NSN");

                    b.HasIndex("SCode");

                    b.ToTable("Marksheet");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.SchoolInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SchoolInfo");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.StudentModel", b =>
                {
                    b.Property<string>("NSN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("AdmissionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("D_O_B")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NSN");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.SubjectModel", b =>
                {
                    b.Property<string>("SCode")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SCode");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.UserModel", b =>
                {
                    b.Property<string>("TeacherId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeacherId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.CSModel", b =>
                {
                    b.HasOne("SchoolResultSystem.Web.Models.ClassModel", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolResultSystem.Web.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("NSN")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.CSTModel", b =>
                {
                    b.HasOne("SchoolResultSystem.Web.Models.ClassModel", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolResultSystem.Web.Models.SubjectModel", "Subject")
                        .WithMany()
                        .HasForeignKey("SCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SchoolResultSystem.Web.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.ExamModel", b =>
                {
                    b.HasOne("SchoolResultSystem.Web.Models.SubjectModel", "Subject")
                        .WithMany()
                        .HasForeignKey("SCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolResultSystem.Web.Models.MarksheetModel", b =>
                {
                    b.HasOne("SchoolResultSystem.Web.Models.ExamModel", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolResultSystem.Web.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("NSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolResultSystem.Web.Models.SubjectModel", "Subject")
                        .WithMany()
                        .HasForeignKey("SCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });
#pragma warning restore 612, 618
        }
    }
}
